/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/frontend/js/scripts.min.js":
/*!**********************************************!*\
  !*** ./resources/frontend/js/scripts.min.js ***!
  \**********************************************/
/***/ (() => {

eval("/*global.jquery = global.jQuery = global.$ = require('jquery');\n//import $ from 'jquery-slim-webpack';\n//import $ from 'jquery-modal';*/\n$(document).ready(function (event) {\n  $('.autor-button').click(function (event) {\n    $('.custom-button').removeClass('active__btn2');\n    $('.autor-button').addClass('active__btn');\n    $('.customer-menu').css('display', 'none');\n    $('.autor-menu').css('display', 'block');\n  });\n  $('.custom-button').click(function (event) {\n    $('.custom-button').addClass('active__btn2');\n    $('.autor-button').removeClass('active__btn');\n    $('.autor-menu').css('display', 'none');\n    $('.customer-menu').css('display', 'block');\n  });\n  $('.open__menu').click(function (event) {\n    $('.account').toggleClass('account-active');\n    $('.customer-menu').css('display', 'none');\n    $('.autor-menu').css('display', 'block');\n    $('.custom-button').removeClass('active__btn2');\n    $('.autor-button').addClass('active__btn');\n  });\n  var counter1 = 0;\n  var counter2 = 0;\n  var counter3 = 0;\n\n  if ($(\".run1\").is('h2')) {\n    var scroll = $(window).scrollTop() + $(window).height();\n    var offset1 = $(\".run1\").offset().top;\n\n    if (scroll > offset1 && counter1 == 0) {\n      counter1 = 1;\n      var numb_finish = parseInt($(\".run1\").text().replaceAll(' ', '')); // Получаем начальное число\n\n      $({\n        numberValue: 0\n      }).animate({\n        numberValue: numb_finish\n      }, {\n        duration: 1000,\n        // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n        easing: \"linear\",\n        step: function step(val) {\n          $(\".run1\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n        }\n      });\n    }\n\n    var offset2 = $(\".run2\").offset().top;\n\n    if (scroll > offset2 && counter2 == 0) {\n      counter2 = 1;\n      var numb_finish = parseInt($(\".run2\").text().replaceAll(' ', '')); // Получаем начальное число\n\n      $({\n        numberValue: 0\n      }).animate({\n        numberValue: numb_finish\n      }, {\n        duration: 1000,\n        // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n        easing: \"linear\",\n        step: function step(val) {\n          $(\".run2\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n        }\n      });\n    }\n\n    var offset3 = $(\".run3\").offset().top;\n\n    if (scroll > offset3 && counter3 == 0) {\n      counter3 = 1;\n      var numb_finish = parseInt($(\".run3\").text().replaceAll(' ', '')); // Получаем начальное число\n\n      $({\n        numberValue: 0\n      }).animate({\n        numberValue: numb_finish\n      }, {\n        duration: 1000,\n        // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n        easing: \"linear\",\n        step: function step(val) {\n          $(\".run3\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n        }\n      });\n    }\n\n    $(window).scroll(function () {\n      var scroll = $(window).scrollTop() + $(window).height();\n      var offset1 = $(\".run1\").offset().top;\n\n      if (scroll > offset1 && counter1 == 0) {\n        counter1 = 1;\n        var numb_finish = parseInt($(\".run1\").text().replaceAll(' ', '')); // Получаем начальное число\n\n        $({\n          numberValue: 0\n        }).animate({\n          numberValue: numb_finish\n        }, {\n          duration: 1000,\n          // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n          easing: \"linear\",\n          step: function step(val) {\n            $(\".run1\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n          }\n        });\n      }\n\n      var offset2 = $(\".run2\").offset().top;\n\n      if (scroll > offset2 && counter2 == 0) {\n        counter2 = 1;\n        var numb_finish = parseInt($(\".run2\").text().replaceAll(' ', '')); // Получаем начальное число\n\n        $({\n          numberValue: 0\n        }).animate({\n          numberValue: numb_finish\n        }, {\n          duration: 1000,\n          // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n          easing: \"linear\",\n          step: function step(val) {\n            $(\".run2\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n          }\n        });\n      }\n\n      var offset3 = $(\".run3\").offset().top;\n\n      if (scroll > offset3 && counter3 == 0) {\n        counter3 = 1;\n        var numb_finish = parseInt($(\".run3\").text().replaceAll(' ', '')); // Получаем начальное число\n\n        $({\n          numberValue: 0\n        }).animate({\n          numberValue: numb_finish\n        }, {\n          duration: 1000,\n          // Продолжительность анимации, где 500 = 0,5 одной секунды, то есть 500 миллисекунд\n          easing: \"linear\",\n          step: function step(val) {\n            $(\".run3\").html(Math.ceil(val).toLocaleString()); // Блок, где необходимо сделать анимацию\n          }\n        });\n      }\n    });\n  }\n\n  $('.personal1, .country').mouseenter(function (event) {\n    $('.country').addClass('oppppeeeennn');\n  });\n  $('.personal1, .country').mouseleave(function (event) {\n    $('.country').removeClass('oppppeeeennn');\n  });\n  var hamburger = document.querySelector('.open__menu');\n  var menu = document.querySelector('.personal-dropdown');\n\n  var toggleMenu = function toggleMenu() {\n    menu.classList.toggle('active__dropdown');\n  };\n\n  if (hamburger) {\n    hamburger.addEventListener('click', function (e) {\n      e.stopPropagation();\n      toggleMenu();\n    });\n  }\n\n  document.addEventListener('click', function (e) {\n    var target = e.target;\n    var its_menu = target == menu || menu.contains(target);\n    var its_hamburger = target == hamburger;\n    var menu_is_active = menu.classList.contains('active__dropdown');\n\n    if (!its_menu && !its_hamburger && menu_is_active) {\n      toggleMenu();\n    }\n  });\n  $('.one').hover(function (event) {\n    $('.img-one').toggleClass('img-pass');\n    $('.img-first').toggleClass('img-active');\n  });\n  $('.two').hover(function (event) {\n    $('.img-two').toggleClass('img-pass');\n    $('.img-second').toggleClass('img-active');\n  });\n  $('.three').hover(function (event) {\n    $('.img-three').toggleClass('img-pass');\n    $('.img-third').toggleClass('img-active');\n  });\n  $(\".hint\").each(function () {\n    $(this).mouseover(function () {\n      $(this).next('.text__hint').toggleClass('active__hint');\n    });\n    $(this).mouseout(function () {\n      $('.text__hint').removeClass('active__hint');\n    });\n  });\n});\n$(\".proj_nav_item\").each(function () {\n  $(this).click(function () {\n    $('.proj_nav_item').removeClass('active__nav');\n    $(this).addClass('active__nav');\n  });\n});\n$(\".vip__span\").each(function () {\n  $(this).click(function () {\n    $(this).addClass('active__vip');\n  });\n});\n$(\".sposob__item\").each(function () {\n  $(this).click(function () {\n    $('.sposob__item').removeClass('active__sposob');\n    $(this).addClass('active__sposob');\n  });\n});\n$(\".first__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.first__navigation').show();\n  });\n});\n$(\".second__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.second__navigation').show();\n  });\n});\n$(\".third__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.third__navigation').show();\n  });\n});\n$(\".fourth__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.fourth__navigation').show();\n  });\n});\n$(\".fifth__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.fifth__navigation').show();\n  });\n});\n$(\".sixth__open\").each(function () {\n  $(this).click(function () {\n    $('.new__of__navigation').hide();\n    $('.sixth__navigation').show();\n  });\n});\n$(\".first__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab1').show();\n  });\n});\n$(\".second__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab2').show();\n  });\n});\n$(\".third__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab3').show();\n  });\n});\n$(\".fourth__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab4').show();\n  });\n});\n$(\".fifth__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab5').show();\n  });\n});\n$(\".sixth__tab\").each(function () {\n  $(this).click(function () {\n    $('.all__tab__item').hide();\n    $('.item__tab6').show();\n  });\n});\n$(\"#FileInput\").on('change', function (e) {\n  var labelVal = $(\".title\").text();\n  var oldfileName = $(this).val();\n  fileName = e.target.value.split('\\\\').pop();\n\n  if (oldfileName == fileName) {\n    return false;\n  }\n\n  var extension = fileName.split('.').pop();\n\n  if ($.inArray(extension, ['jpg', 'jpeg', 'png']) >= 0) {\n    $(\".filelabel i\").removeClass().addClass('fa fa-file-image-o');\n    $(\".filelabel i, .filelabel .title\").css({\n      'color': '#208440'\n    });\n    $(\".filelabel\").css({\n      'border': ' 2px solid #208440'\n    });\n  } else if (extension == 'pdf') {\n    $(\".filelabel i\").removeClass().addClass('fa fa-file-pdf-o');\n    $(\".filelabel i, .filelabel .title\").css({\n      'color': 'red'\n    });\n    $(\".filelabel\").css({\n      'border': ' 2px solid red'\n    });\n  } else if (extension == 'doc' || extension == 'docx') {\n    $(\".filelabel i\").removeClass().addClass('fa fa-file-word-o');\n    $(\".filelabel i, .filelabel .title\").css({\n      'color': '#2388df'\n    });\n    $(\".filelabel\").css({\n      'border': ' 2px solid #2388df'\n    });\n  } else {\n    $(\".filelabel i\").removeClass().addClass('fa fa-file-o');\n    $(\".filelabel i, .filelabel .title\").css({\n      'color': 'black'\n    });\n    $(\".filelabel\").css({\n      'border': ' 2px solid black'\n    });\n  }\n\n  if (fileName) {\n    if (fileName.length > 10) {\n      $(\".filelabel .title\").text(fileName.slice(0, 4) + '...' + extension);\n    } else {\n      $(\".filelabel .title\").text(fileName);\n    }\n  } else {\n    $(\".filelabel .title\").text(labelVal);\n  }\n});\n$(\".custom-select\").each(function () {\n  var classes = $(this).attr(\"class\"),\n      id = $(this).attr(\"id\"),\n      name = $(this).attr(\"name\");\n  var template = '<div class=\"' + classes + '\">';\n  template += '<span class=\"custom-select-trigger\">' + $(this).attr(\"placeholder\") + '</span>';\n  template += '<div class=\"custom-options\">';\n  $(this).find(\"option\").each(function () {\n    template += '<span class=\"custom-option ' + $(this).attr(\"class\") + '\" data-value=\"' + $(this).attr(\"value\") + '\">' + $(this).html() + '</span>';\n  });\n  template += '</div></div>';\n  $(this).wrap('<div class=\"custom-select-wrapper\"></div>');\n  $(this).hide();\n  $(this).after(template);\n});\n$(\".custom-option:first-of-type\").hover(function () {\n  $(this).parents(\".custom-options\").addClass(\"option-hover\");\n}, function () {\n  $(this).parents(\".custom-options\").removeClass(\"option-hover\");\n});\n$(\".custom-select-trigger\").on(\"click\", function () {\n  $('html').one('click', function () {\n    $(\".custom-select\").removeClass(\"opened\");\n  });\n  $(this).parents(\".custom-select\").toggleClass(\"opened\");\n  event.stopPropagation();\n});\n$(\".custom-option\").on(\"click\", function () {\n  $(this).parents(\".custom-select-wrapper\").find(\"select\").val($(this).data(\"value\"));\n  $(this).parents(\".custom-options\").find(\".custom-option\").removeClass(\"selection\");\n  $(this).addClass(\"selection\");\n  $(this).parents(\".custom-select\").removeClass(\"opened\");\n  $(this).parents(\".custom-select\").find(\".custom-select-trigger\").text($(this).text());\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/frontend/js/scripts.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/frontend/js/scripts.min.js"]();
/******/ 	
/******/ })()
;